{% extends '_site/NewLayout' %}

{% block content %}
    <script>
      function showCountdownTimer() {
        $(".show-timer").css("display", "block");
        $(".show-live").css("display", "none");

        // show my dashboard button while timer is displayed
        $(".btn-my-dashboard").css("display", "block");
      }

      function showCountdownCompletion() {
        $(".show-timer").css("display", "none");
        $(".show-live").css("display", "block");

        // hide my dashboard button while watch live now button is displayed
        $(".btn-my-dashboard").css("display", "none");
      }

      function startTimer(countdownTargetDateMS) {
        x = setInterval(function() {
          tickTimer(countdownTargetDateMS);
        }, 1000);
      }

      // countdownTargetDateMS should be a full epoch date in milliseconds
      function tickTimer(countdownTargetDateMS) {

        var nowDateMS = new Date().getTime();

        // get the delta from now to the target time (all in milliseconds)
        var deltaTime = countdownTargetDateMS - nowDateMS;

        // calc needed values to break out the time parts
        var dayInMilliseconds = (1000 * 60 * 60 * 24);
        var hourInMilliseconds = (1000 * 60 * 60);
        var minutesInMilliseconds = (1000 * 60);

        var days = Math.floor(deltaTime / dayInMilliseconds);
        var hours = Math.floor(deltaTime % dayInMilliseconds / hourInMilliseconds);
        var minutes = Math.floor(deltaTime % hourInMilliseconds / minutesInMilliseconds);
        var seconds = Math.floor(deltaTime % minutesInMilliseconds / 1000);

        // update the actual markup, and there're always two digits
        $(".days").text(addLeadingZero(days));
        $(".hours").text(addLeadingZero(hours));
        $(".minutes").text(addLeadingZero(minutes));
        $(".seconds").text(addLeadingZero(seconds));

        if ((days + hours + minutes + seconds) > 0) {
          showCountdownTimer();
        } else {
          showCountdownCompletion();

          clearInterval(x);
        }
      }

      function addLeadingZero(value) {
        if (value < 10) {
          return "0" + value
        }
        ;

        return value;
      }
    </script>
    <script>
      $(document).ready(function() {
        // load the api response for TC live
        var isLive = ('False' == 'True');
        var timeInMS = new Date('01/01/2025 18:00:00').getTime();
        if (!isLive && timeInMS) {
          // if event is not currently live
          startTimer(timeInMS);
        }
        // initialize slick slider
        $('.service-content-slider').slick({
          dots: true,
          autoplay: true,
          autoplaySpeed: 5000,
          arrows: true,
          slidesToShow: 3,
          responsive: [
            {
              breakpoint: 1330,
              settings: {
                slidesToShow: 1,
              }
            },
            {
              breakpoint: 768,
              settings: {
                slidesToShow: 1
              }
            }
          ]
        });
      });
    </script>
    <style>
        .countdown-timer {
            justify-content: space-around;
            width: 50%;
            align-items: center;
        }

        .countdown-complete {
            display: none;
            width: 100%;
            justify-content: center;
        }

        .time {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        span.time-digit {
            font-size: 34px;
            margin: 15px 5px 0 0;
            line-height: .9
        }

        span.time-label {
            font-size: 12px;
        }

        .spacer {
            border-left: 1px solid gray;
            height: 44px;
        }

        /* Tablet size layout */
        @media screen and (max-width: 1024px) {
            span.time-digit {
                font-size: 36px;
            }

            span.time-label {
                font-size: 12px;
            }

            .spacer {
                height: 48px;
            }
        }

        /* Mobile size layout */
        @media screen and (max-width: 500px) {
            span.time-digit {
                font-size: 24px;
            }

            span.time-label {
                font-size: 8px;
            }

            .spacer {
                height: 32px;
            }
        }

    </style>
    <div class="ccv-live-countdown">
        <div class="countdown-timer">
            <span class="lead-text">Next service begins in:</span>
            <div class="spacer"></div>
            <div class="time">
                <span class="time-digit days">00</span>
                <span class="time-label">days</span>
            </div>
            <div class="spacer"></div>
            <div class="time">
                <span class="time-digit hours">00</span>
                <span class="time-label">hours</span>
            </div>
            <div class="spacer"></div>
            <div class="time">
                <span class="time-digit minutes">00</span>
                <span class="time-label">minutes</span>
            </div>
            <div class="spacer"></div>
            <div class="time">
                <span class="time-digit seconds">00</span>
                <span class="time-label">seconds</span>
            </div>
            <div class="spacer"></div>
        </div>
        <div class="countdown-complete">
            <a href={{ countdownCompleteButtonUrl }} class="btn btn-primary">{{ countdownCompleteButtonText }}</a>
        </div>

    </div>
{% endblock %}